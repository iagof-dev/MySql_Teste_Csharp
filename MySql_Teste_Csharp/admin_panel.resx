<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>